# arch
*.tar
*.tar.*
*.jar
*.exe
*.msi
*.zip
*.tgz
*.log
*.log.*
*.sig
pkg/
src/

# Auto tools
# http://www.gnu.org/software/automake
Makefile.in
/ar-lib
/mdate-sh
/py-compile
/test-driver
/ylwrap
.deps/
.dirstamp

# http://www.gnu.org/software/autoconf
autom4te.cache
/autoscan.log
/autoscan-*.log
/aclocal.m4
/compile
/config.cache
/config.guess
/config.h.in
/config.log
/config.status
/config.sub
/configure
/configure.scan
/depcomp
/install-sh
/missing
/stamp-h1

# https://www.gnu.org/software/libtool/
/ltmain.sh

# http://www.gnu.org/software/texinfo
/texinfo.tex

# http://www.gnu.org/software/m4/
m4/libtool.m4
m4/ltoptions.m4
m4/ltsugar.m4
m4/ltversion.m4
m4/lt~obsolete.m4

# Generated Makefile
# (meta build system like autotools,
# can automatically generate from config.status script
# (which is called by configure script))
Makefile

CMakeLists.txt.user
CMakeCache.txt
CMakeFiles
CMakeScripts
Testing
Makefile
cmake_install.cmake
install_manifest.txt
compile_commands.json
CTestTestfile.cmake
_deps
CMakeUserPresets.json

# Node
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# Snowpack dependency directory (https://snowpack.dev/)
web_modules/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variable files
.env
.env.development.local
.env.test.local
.env.production.local
.env.local

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next
out

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
# Comment in the public line in if your project uses Gatsby and not Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# vuepress build output
.vuepress/dist

# vuepress v2.x temp and cache directory
.temp
.cache

# Docusaurus cache and generated files
.docusaurus

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# yarn v2
.yarn/cache
.yarn/unplugged
.yarn/build-state.yml
.yarn/install-state.gz
.pnp.*

# Could just force-add these files and leave this as '*', but this way I have a
# nice explicit list for documentation's sake.

# Ignore everything by default.
*

# Bash stuff (profile just sources bashrc, since it's the only thing sourced
# when a shell is a login shell).
!.bash*
.*.swp
.bash_history
.bash_local
.bash_logout
!.profile

# Zsh
!.zshrc
!.zsh
!.zsh/*
!.zsh/contrib
!.zsh/contrib/*
# Do ignore the data directory (my construct, it's where completion cache,
# history etc live)
.zsh/data
.zsh/data/*
# Do ignore local/sensitive settings
.zsh/*local
# Swapfiles (sigh)
.zsh/*.swp

# Git aliases, identification info
!.gitconfig
# The gitignore of this repository itself (!)
!.gitignore
# My global Git excludes file (acts as a global .gitignore)
!.gitexcludes

# Mercurial config (yup, stored in a Git repository. Take that, hg!)
!.hgrc

# IPython config (need directory here so gitignore works correctly.
# This won't actually pull in the other contetns of the dir, though.
# Which is good as all I care about is the...
!.ipython
# ...default profile's...
!.ipython/profile_default
# ...main config file
!.ipython/profile_default/ipython_config.py

# Virtualenvwrapper hooks
!.virtualenvs
!.virtualenvs/postmkvirtualenv

# IRb config
!.irbrc
# RVM config
!.rvmrc

# Vim plugins, ftplugins, syntax etc etc
!.vim
!.vim/*
!.vim/*/*
!.vim/*/*/*
!.vim/*/*/*/*
!.vim/*/*/*/*/*
!.vim/*/*/*/*/*/*
# Do ignore netrw history
.vim/.netrwhist
# Do ignore vim-plug stuff, sigh
.vim/plugged
# Vim settings
!.vimrc
# Ignore swapfiles
.vim/.*.swp
.vim/*/.*.swp
.vim/*/*/.*.swp
.vim/*/*/*/.*.swp

# Local copies of tools/scripts
!bin
!bin/*
bin/.*.swp
# Concourse CLI; changes depending on target version
bin/fly

# Config for local daemons (e.g. squid)
!etc
!etc/*
etc/clusto*.conf

# Screen, tmux
!.screenrc
!.tmux.conf
!.tmux
!.tmux/*.yml

# Gem config
!.gemrc

# Mutt
!.muttrc
!.mutt
!.mutt/*

# RTorrent
!.rtorrent.rc

# Ack
!.ackrc

# Teamocil
!.teamocil
!.teamocil/*

# Synergy
!.synergy.conf

# Leiningen (Clojure)
!.lein
!.lein/profiles.clj

# Hammerspoon (Lua-based OS X automation tool)
!.hammerspoon
!.hammerspoon/*
.hammerspoon/.*.swp

# Linux workstation stuff
!.config
!.config/bat
!.config/bat/*
!.config/bat/themes
!.config/bat/themes/*
!.config/xfce4
!.config/xfce4/terminal
!.config/xfce4/terminal/terminalrc
!.config/systemd/
!.config/systemd/user
!.config/systemd/user/*
!.config/systemd/user/*/*
# Keep ignoring this, it comes from the OS.
.config/systemd/user/gpg-agent.service
# And don't see swaps as usual (sigh)
.config/systemd/user/.*.swp

# Random arbitrary not-really-a-config file,
# for use with hexdump
!.config/hexdump.format

# Invoke customization (eg for nixos run.shell loc)
!.invoke.yml

# GPG settings (does NOT include keychain etc!)
!.gnupg
!.gnupg/*.conf

# Rust!
!.cargo
!.cargo/config.toml

# Lazygit
!.config/lazygit/
!.config/lazygit/config.yml
